# ==============================================
# AI RESUME BUILDER - ENVIRONMENT VARIABLES
# ==============================================
# Copy this file to .env.local and fill in your actual values
# Never commit .env.local to version control!

# ==============================================
# DATABASE CONFIGURATION
# ==============================================
# PostgreSQL connection string
# Format: postgresql://username:password@hostname:port/database_name
DATABASE_URL="postgresql://postgres:password@localhost:5432/ai_resume_builder"

# For local development with Docker:
# DATABASE_URL="postgresql://postgres:password@localhost:5432/ai_resume_builder"

# For production (Railway, Supabase, Neon, etc.):
# DATABASE_URL="postgresql://username:password@host:5432/database"

# ==============================================
# NEXTAUTH.JS AUTHENTICATION
# ==============================================
# Generate a random secret key (32+ characters recommended)
# You can use: openssl rand -base64 32
NEXTAUTH_SECRET="your-super-secret-nextauth-key-here-make-it-long-and-random"

# Your application URL
# For development:
NEXTAUTH_URL="http://localhost:3000"
# For production:
# NEXTAUTH_URL="https://your-domain.com"

# ==============================================
# GOOGLE OAUTH (OPTIONAL BUT RECOMMENDED)
# ==============================================
# How to get these:
# 1. Go to https://console.cloud.google.com/
# 2. Create a new project or select existing one
# 3. Enable Google+ API
# 4. Go to "Credentials" → "Create Credentials" → "OAuth 2.0 Client IDs"
# 5. Set authorized redirect URIs to: http://localhost:3000/api/auth/callback/google
# 6. For production, add: https://your-domain.com/api/auth/callback/google

GOOGLE_CLIENT_ID="your-google-client-id.apps.googleusercontent.com"
GOOGLE_CLIENT_SECRET="your-google-client-secret"

# ==============================================
# OPENAI API (REQUIRED FOR AI FEATURES)
# ==============================================
# How to get this:
# 1. Go to https://platform.openai.com/api-keys
# 2. Sign up or log in to your OpenAI account
# 3. Click "Create new secret key"
# 4. Copy the key (starts with sk-)
# Note: This requires billing setup on OpenAI

OPENAI_API_KEY="sk-your-openai-api-key-here"

# ==============================================
# APPLICATION CONFIGURATION
# ==============================================
# Your app's public URL (used for resume sharing, QR codes, etc.)
NEXT_PUBLIC_APP_URL="http://localhost:3000"

# For production:
# NEXT_PUBLIC_APP_URL="https://your-domain.com"

# ==============================================
# EMAIL CONFIGURATION (OPTIONAL)
# ==============================================
# For sending emails (password reset, notifications, etc.)
# Using Resend (recommended)
# Get API key from: https://resend.com/api-keys
RESEND_API_KEY="re_your-resend-api-key"

# Email "from" address
EMAIL_FROM="noreply@your-domain.com"

# ==============================================
# FILE STORAGE (OPTIONAL)
# ==============================================
# For storing uploaded images, logos, etc.
# Using AWS S3 or compatible service

# AWS S3 Configuration
AWS_ACCESS_KEY_ID="your-aws-access-key"
AWS_SECRET_ACCESS_KEY="your-aws-secret-key"
AWS_REGION="us-east-1"
AWS_S3_BUCKET="your-resume-builder-bucket"

# Or use Cloudinary (alternative)
# CLOUDINARY_CLOUD_NAME="your-cloud-name"
# CLOUDINARY_API_KEY="your-api-key"
# CLOUDINARY_API_SECRET="your-api-secret"

# ==============================================
# ANALYTICS (OPTIONAL)
# ==============================================
# Google Analytics
NEXT_PUBLIC_GA_ID="G-XXXXXXXXXX"

# PostHog (user analytics)
NEXT_PUBLIC_POSTHOG_KEY="phc_your-posthog-key"
NEXT_PUBLIC_POSTHOG_HOST="https://app.posthog.com"

# ==============================================
# PAYMENT PROCESSING (OPTIONAL)
# ==============================================
# For premium features
# Stripe configuration
STRIPE_SECRET_KEY="sk_test_your-stripe-secret-key"
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY="pk_test_your-stripe-publishable-key"
STRIPE_WEBHOOK_SECRET="whsec_your-webhook-secret"

# ==============================================
# DEVELOPMENT/DEBUG OPTIONS
# ==============================================
# Set to 'development' for detailed logging
NODE_ENV="development"

# Enable Prisma query logging
# PRISMA_LOG_LEVEL="query"

# ==============================================
# SECURITY HEADERS (PRODUCTION)
# ==============================================
# Content Security Policy
# CSP_HEADER="default-src 'self'; script-src 'self' 'unsafe-eval' 'unsafe-inline'" 