// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  role          UserRole  @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts Account[]
  sessions Session[]
  resumes  Resume[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Resume {
  id          String      @id @default(cuid())
  title       String
  slug        String      @unique
  data        Json
  templateId  String
  isPublic    Boolean     @default(false)
  version     Int         @default(1)
  atsScore    Int?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  userId      String
  
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  template    Template    @relation(fields: [templateId], references: [id])
  versions    ResumeVersion[]
  analytics   ResumeAnalytics[]
}

model ResumeVersion {
  id        String   @id @default(cuid())
  resumeId  String
  version   Int
  data      Json
  createdAt DateTime @default(now())
  
  resume    Resume   @relation(fields: [resumeId], references: [id], onDelete: Cascade)
  
  @@unique([resumeId, version])
}

model Template {
  id          String   @id @default(cuid())
  name        String
  description String?
  preview     String?
  component   String   // Component name
  category    String
  isPremium   Boolean  @default(false)
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  resumes     Resume[]
}

model ResumeAnalytics {
  id        String   @id @default(cuid())
  resumeId  String
  views     Int      @default(0)
  downloads Int      @default(0)
  date      DateTime @default(now())
  
  resume    Resume   @relation(fields: [resumeId], references: [id], onDelete: Cascade)
  
  @@unique([resumeId, date])
}

enum UserRole {
  USER
  ADMIN
}

enum ResumeStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
} 